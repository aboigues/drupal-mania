version: '3.8'

services:
  # Service PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: drupal-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-drupal}
      POSTGRES_USER: ${POSTGRES_USER:-drupal}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drupal}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    networks:
      - drupal-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-drupal}"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: postgres
    depends_on:
      - fluentd

  # Service Drupal
  drupal:
    image: drupal:10-apache
    container_name: drupal-app
    restart: unless-stopped
    ports:
      - "${DRUPAL_PORT:-8080}:80"
    environment:
      # Configuration de la base de données
      POSTGRES_DB: ${POSTGRES_DB:-drupal}
      POSTGRES_USER: ${POSTGRES_USER:-drupal}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-drupal}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
    volumes:
      # Templates de modules et thèmes (versionnés)
      - ./templates/drupal/modules/drupalmania_module:/opt/drupal/web/modules/custom/drupalmania_module
      - ./templates/drupal/themes/drupalmania_theme:/opt/drupal/web/themes/custom/drupalmania_theme
      # Données persistantes (non versionnées)
      - ./data/drupal/modules:/opt/drupal/web/modules/custom/user_modules
      - ./data/drupal/themes:/opt/drupal/web/themes/custom/user_themes
      - ./data/drupal/sites:/opt/drupal/web/sites
      - ./data/drupal/profiles:/opt/drupal/web/profiles
    networks:
      - drupal-network
    depends_on:
      - fluentd
      postgres:
        condition: service_healthy
    logging:
      driver: fluentd
      options:
        fluentd-address: localhost:24224
        tag: drupal

  # Service Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.1
    container_name: drupal-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./data/elasticsearch:/usr/share/elasticsearch/data
    networks:
      - drupal-network
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Service Fluentd
  fluentd:
    build:
      context: ./config/fluentd
      dockerfile: Dockerfile
    container_name: drupal-fluentd
    restart: unless-stopped
    ports:
      - "24224:24224"
      - "24224:24224/udp"
    volumes:
      - ./config/fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./data/fluentd:/fluentd/log
    networks:
      - drupal-network
    depends_on:
      elasticsearch:
        condition: service_healthy

  # Service Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.1
    container_name: drupal-kibana
    restart: unless-stopped
    ports:
      - "${KIBANA_PORT:-5601}:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - drupal-network
    depends_on:
      elasticsearch:
        condition: service_healthy

networks:
  drupal-network:
    driver: bridge

volumes:
  postgres-data:
  drupal-data:
